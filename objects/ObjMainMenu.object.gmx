<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main Menu Variables
title[0] = "Undertale:"
title[1] = "Unknown Entity"
option[0] = "Play Overworld"
option[1] = "Play Boss Battle"
option[2] = "Options"
option[3] = "Exit"
menu_index = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selecting Menu Option
if(ObjWorldAlarm.alarm[2] &lt;= 0) {
    if(INPUT.downKey or INPUT.downKey2) {
        if(menu_index &lt; array_length_1d(option) - 1) {
            menu_index++
        } else {
            menu_index = 0
        }
        ObjWorldAlarm.alarm[2] = room_speed / 4
    }
    if(INPUT.upKey or INPUT.upKey2) {
        if(menu_index &gt; 0) {
            menu_index--
        } else {
            menu_index = array_length_1d(option) - 1
        }
        ObjWorldAlarm.alarm[2] = room_speed / 4
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing GUI
var xx = display_get_gui_width() / 2
var yy = display_get_gui_height() / 2

draw_set_halign(fa_center)
draw_set_valign(fa_middle)

draw_set_color(c_aqua)
draw_set_font(FntTitleBack)
draw_text(xx, yy, title[0])
draw_text(xx, yy + 64, title[1])

draw_set_color(c_white)
draw_set_font(FntTitleFore)
draw_text(xx, yy, title[0])
draw_text(xx, yy + 64, title[1])
    
for(var i = 0; i &lt;= array_length_1d(option) - 1; i++) {
    draw_set_color(c_white)
    draw_set_font(FntMain)
    if(i == menu_index) draw_set_color(c_yellow)
    draw_text(xx, yy + 128 + (i * 32), option[i])
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
